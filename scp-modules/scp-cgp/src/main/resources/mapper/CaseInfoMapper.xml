<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bjzhianjia.scp.cgp.mapper.CaseInfoMapper">

	<!-- 可根据自己的需求，是否要使用 -->
	<resultMap type="com.bjzhianjia.scp.cgp.entity.CaseInfo"
		id="caseInfoMap">
		<result property="id" column="id" />
		<result property="sourceType" column="source_type" />
		<result property="sourceCode" column="source_code" />
		<result property="caseCode" column="case_code" />
		<result property="caseTitle" column="case_title" />
		<result property="caseDesc" column="case_desc" />
		<result property="regulaObjList" column="regula_obj_list" />
		<result property="concernedPerson" column="concerned_person" />
		<result property="bizList" column="biz_list" />
		<result property="eventTypeList" column="event_type_list" />
		<result property="grid" column="grid" />
		<result property="occurAddr" column="occur_addr" />
		<result property="mapInfo" column="map_info" />
		<result property="checkIsExist" column="check_is_exist" />
		<result property="checkTime" column="check_time" />
		<result property="checkPerson" column="check_person" />
		<result property="checkOpinion" column="check_opinion" />
		<result property="checkPic" column="check_pic" />
		<result property="checkVideo" column="check_video" />
		<result property="deadLine" column="dead_line" />
		<result property="executeDept" column="execute_dept" />
		<result property="requirements" column="requirements" />
		<result property="approveInfo" column="approve_info" />
		<result property="finishCheckIsExist"
			column="finish_check_is_exist" />
		<result property="finishCheckTime" column="finish_check_time" />
		<result property="finishCheckPerson"
			column="finish_check_person" />
		<result property="finishCheckOpinion"
			column="finish_check_opinion" />
		<result property="finishCheckPic" column="finish_check_pic" />
		<result property="finishCheckVideo" column="finish_check_video" />
		<result property="finishPerson" column="finish_person" />
		<result property="finishTime" column="finish_time" />
		<result property="finishDesc" column="finish_desc" />
		<result property="replyPerson" column="reply_person" />
		<result property="replyTime" column="reply_time" />
		<result property="replyDesc" column="reply_desc" />
		<result property="isDeleted" column="is_deleted" />
		<result property="crtTime" column="crt_time" />
		<result property="crtUserId" column="crt_user_id" />
		<result property="crtUserName" column="crt_user_name" />
		<result property="updTime" column="upd_time" />
		<result property="updUserId" column="upd_user_id" />
		<result property="updUserName" column="upd_user_name" />
		<result property="tenantId" column="tenant_id" />
		<result property="deptId" column="dept_id" />
	</resultMap>

	<!-- 拼接不为空的事件参数 -->
	<sql id="isParamNull">
		<!-- 未删除 -->
		is_deleted=0
		<!-- 业务线条 -->
		<if test="caseInfo.bizList != null and caseInfo.bizList != ''">
			and biz_list=#{caseInfo.bizList}
		</if>
		<!-- 事件类别 -->
		<if
			test="caseInfo.eventTypeList != null and caseInfo.eventTypeList != ''">
			and event_type_list=#{caseInfo.eventTypeList}
		</if>
		<!-- 网格范围（网格ids） -->
		<if test="gridIds != null and gridIds != ''">
			and grid in (#{gridIds})
		</if>
		<!-- 事件来源 -->
		<if
			test="caseInfo.sourceType != null and caseInfo.sourceType != ''">
			and source_type=#{caseInfo.sourceType}
		</if>
		<!-- 事件级别 -->
		<if test="caseInfo.caseLevel != null and caseInfo.caseLevel != ''">
			and case_level=#{caseInfo.caseLevel}
		</if>
		<!-- 日期范围（开始时间和结束时间） -->
		<if test="startTime !=null and startTime!='' ">
			<if test="endTime !=null and endTime!='' ">
					<![CDATA[
					and #{startTime}<=crt_time and crt_time <= #{endTime}
					]]>
			</if>
		</if>
	</sql>

	<!-- 事件来源分布统计 -->
	<select id="getStatisEventSource" resultType="java.util.Map">
		SELECT
		source_type as sourceType,
		count(*) as count
		FROM
		case_info
		WHERE
		<include refid="isParamNull" />
		GROUP BY
		source_type
	</select>
	<select id="getStatisCaseInfo" resultType="java.util.Map">
		SELECT
		cyear,
		cmonth,
		total,
		MAX( CASE caseLevel WHEN 'root_biz_eventLevel_teji' THEN count ELSE 0 END ) root_biz_eventLevel_teji,
		MAX( CASE caseLevel WHEN 'root_biz_eventLevel_jinji' THEN count ELSE 0 END ) root_biz_eventLevel_jinji,
		MAX( CASE caseLevel WHEN 'root_biz_eventLevel_normal' THEN count ELSE 0 END ) root_biz_eventLevel_normal
		FROM
			(
				SELECT
					caseInfo1.cyear cyear,
					caseInfo1.cmonth cmonth,
					caseInfo1.caseLevel caseLevel,
					caseInfo1.count count,
					caseInfo2.total total
				FROM
					(
						SELECT
							YEAR (crt_time) cyear,
							MONTH (crt_time) cmonth,
							case_level caseLevel,
							count(*) count
						FROM
							case_info
						WHERE
						<include refid="isParamNull"/>
						GROUP BY
							cyear,
							cmonth,
							case_level
					) caseInfo1
				LEFT JOIN (
					SELECT
						YEAR (crt_time) cyear,
						MONTH (crt_time) cmonth,
						count(*) total
					FROM
						case_info
					GROUP BY
						cyear,
						cmonth
				) caseInfo2 ON caseInfo1.cyear = caseInfo2.cyear
				AND caseInfo1.cmonth = caseInfo2.cmonth
			) temp
		GROUP BY
			cyear,
			cmonth,
			total
	</select>

	<!-- 事件超时数 -->
	<select id="selectOvertime" resultType="int">
		SELECT
		count(*) overtime
		FROM
		case_info
		WHERE
		<include refid="isParamNull" />
		<!-- 有期限时间 -->
		and dead_line IS NOT NULL
		AND (
		<!-- 处理中的超时 -->
		(
		is_finished = 0
		AND NOW() >
		dead_line
		)
		<!-- 已完成、已终止的超时 -->
		OR (
		is_finished IN (1, 2)
		AND finish_time > dead_line
		)
		)

	</select>
	<!-- 处理中、已完成、已终止统计 -->
	<select id="selectState" resultType="java.util.Map">
		SELECT
		is_finished as state,
		count(*) count
		FROM
		case_info
		WHERE
		<include refid="isParamNull" />
		GROUP BY
		is_finished
	</select>

	<!-- 业务条线分布统计 -->
	<select id="selectBizLine" resultType="java.util.Map">
		SELECT
		biz_list bizList,
		count(*) count
		FROM
		case_info
		WHERE
		<include refid="isParamNull"/>
			<!--AND grid in(#{gridIds})-->
		GROUP BY
		biz_list
	</select>

	<!-- 按网格查询事件分布 -->
	<select id="selectByGrid" resultType="com.alibaba.fastjson.JSONObject">

		SELECT
		grid,
		gridCode,
		gridName,
		gridLevel,
		IFNULL(gridParentCode,'') gridParentCode,
		IFNULL(gridParentName,'') gridParentName,
		IFNULL(total_,0) total_,
		MAX(CASE isFinished WHEN '0' THEN count_ ELSE 0 END ) stateTodo,
		MAX(CASE isFinished WHEN '1' THEN count_ ELSE 0 END ) stateFinish,
		MAX(CASE isFinished WHEN '2' THEN count_ ELSE 0 END ) stateStop,
		IFNULL(overtimeCount,0) overtimeCount
		FROM(

SELECT
					ag1.id grid,
					ag1.grid_code gridCode,
					ag1.grid_name gridName,
					ag1.grid_level gridLevel,
					ag2.grid_code gridParentCode,
					ag2.grid_name gridParentName,
					total_,
					is_finished isFinished,
					count_,
					overtimeCount
				FROM
				area_grid ag1

LEFT JOIN (
SELECT
						grid,
						COUNT(id) overtimeCount
					FROM
						case_info
					WHERE
						dead_line IS NOT NULL
					AND (
						(
							is_finished = 0
							AND NOW() > dead_line
						)
						OR (
							is_finished IN (1, 2)
							AND finish_time > dead_line
						)
					)
					GROUP BY
						grid) c ON c.grid=ag1.id

						LEFT JOIN(

SELECT
						grid,
						COUNT(id) total_
					FROM
						case_info
					GROUP BY
						grid) g_m ON g_m.grid=ag1.id

						LEFT JOIN (

SELECT
						grid,
						is_finished,
						COUNT(id) count_
					FROM
						case_info

						WHERE
				<include refid="isParamNull"/>

					GROUP BY
						grid,
						is_finished) g_e ON g_e.grid=ag1.id

						LEFT JOIN area_grid ag2 ON ag2.`id`=ag1.`grid_parent`
						WHERE
			            ag1.grid_level =#{gridLevel}
                        <!-- 使用网格表左连接其他表，保证网格表数据干净，需要剔除被删除的记录 -->
                        AND ag1.is_deleted='0') tmp
						GROUP BY
			grid,
			gridCode,
			gridName,
			gridLevel,
			gridParentCode,
			gridParentName,
			total_,
			overtimeCount
		ORDER BY
			total_ DESC

	</select>
	<!-- 通过部门id查询事件列表 -->
	<select id="selectCaseInfoByDeptId" resultType="java.util.Map">
		SELECT
			id,
			crt_time crtTime,
			case_title caseTitle,
			case_level caseLevel,
			is_supervise isSupervise,
			is_urge isUrge
		FROM
			case_info
		WHERE
			is_deleted = 0
		AND is_finished = 0
		AND execute_dept = #{deptId}
		<if test="caseLevel != null and caseLevel!='' ">
			AND case_level = #{caseLevel}
		</if>
		ORDER BY
			crt_time DESC
	</select>
</mapper>